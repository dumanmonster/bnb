import { MsgFundCommunityPoolResponse, MsgSetWithdrawAddressResponse, MsgWithdrawDelegatorRewardResponse, MsgWithdrawValidatorCommissionResponse } from '@bnb-chain/greenfield-cosmos-types/cosmos/distribution/v1beta1/tx';
import { Coin } from '@cosmjs/proto-signing';
export interface IDistribution {
    /**
     * sets the withdrawal address for a delegator address
     */
    setWithdrawAddress(withdrawAddress: string, delegatorAddress: string): Promise<MsgSetWithdrawAddressResponse>;
    /**
     * withdraw accumulated commission by validator
     */
    withdrawValidatorCommission(validatorAddress: string): Promise<MsgWithdrawValidatorCommissionResponse>;
    /**
     * withdraw rewards by a delegator
     */
    withdrawDelegatorReward(validatorAddress: string, delegatorAddress: string): Promise<MsgWithdrawDelegatorRewardResponse>;
    /**
     * sends coins directly from the sender to the community pool.
     */
    fundCommunityPoolundComm(amount: Coin[], depositor: string): Promise<MsgFundCommunityPoolResponse>;
}
export declare class Distribution implements IDistribution {
    private basic;
    private queryClient;
    setWithdrawAddress(withdrawAddress: string, delegatorAddress: string): Promise<MsgSetWithdrawAddressResponse>;
    withdrawValidatorCommission(validatorAddress: string): Promise<MsgWithdrawValidatorCommissionResponse>;
    withdrawDelegatorReward(validatorAddress: string, delegatorAddress: string): Promise<MsgWithdrawDelegatorRewardResponse>;
    fundCommunityPoolundComm(amount: Coin[], depositor: string): Promise<MsgFundCommunityPoolResponse>;
}
